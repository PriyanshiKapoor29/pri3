import os
import numpy as np
import pandas as pd
from PIL import Image
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import cv2

def load_images(folder_path, label):
    images = []
    labels = []
    for filename in os.listdir(folder_path):
        img_path = os.path.join(folder_path, filename)
        try:
            img = Image.open(img_path).convert('L')  # Convert to grayscale
            img = np.array(img)
            img = cv2.resize(img, (128, 64)) #resize images to a standard size
            images.append(img.flatten())  # Flatten the image
            labels.append(label)
        except Exception as e:
            print(f"Error loading {filename}: {e}")
    return images, labels

# Load the dataset
real_path = "cedar_signatures/real"
forged_path = "cedar_signatures/forged"

real_images, real_labels = load_images(real_path, 0)  # 0 for real
forged_images, forged_labels = load_images(forged_path, 1)  # 1 for forged

all_images = np.array(real_images + forged_images)
all_labels = np.array(real_labels + forged_labels)

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(all_images, all_labels, test_size=0.2, random_state=42)
